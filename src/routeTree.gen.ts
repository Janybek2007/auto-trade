/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './app/routes/__root'
import { Route as CompareImport } from './app/routes/compare'
import { Route as AboutImport } from './app/routes/about'
import { Route as GuestLayoutImport } from './app/routes/_guest-layout'
import { Route as CarsCarIdImport } from './app/routes/cars.$car-id'
import { Route as GuestLayoutHomeIndexImport } from './app/routes/_guest-layout/_home.index'

// Create/Update Routes

const CompareRoute = CompareImport.update({
  id: '/compare',
  path: '/compare',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const GuestLayoutRoute = GuestLayoutImport.update({
  id: '/_guest-layout',
  getParentRoute: () => rootRoute,
} as any)

const CarsCarIdRoute = CarsCarIdImport.update({
  id: '/cars/$car-id',
  path: '/cars/$car-id',
  getParentRoute: () => rootRoute,
} as any)

const GuestLayoutHomeIndexRoute = GuestLayoutHomeIndexImport.update({
  id: '/_home/',
  path: '/',
  getParentRoute: () => GuestLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_guest-layout': {
      id: '/_guest-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestLayoutImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/compare': {
      id: '/compare'
      path: '/compare'
      fullPath: '/compare'
      preLoaderRoute: typeof CompareImport
      parentRoute: typeof rootRoute
    }
    '/cars/$car-id': {
      id: '/cars/$car-id'
      path: '/cars/$car-id'
      fullPath: '/cars/$car-id'
      preLoaderRoute: typeof CarsCarIdImport
      parentRoute: typeof rootRoute
    }
    '/_guest-layout/_home/': {
      id: '/_guest-layout/_home/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof GuestLayoutHomeIndexImport
      parentRoute: typeof GuestLayoutImport
    }
  }
}

// Create and export the route tree

interface GuestLayoutRouteChildren {
  GuestLayoutHomeIndexRoute: typeof GuestLayoutHomeIndexRoute
}

const GuestLayoutRouteChildren: GuestLayoutRouteChildren = {
  GuestLayoutHomeIndexRoute: GuestLayoutHomeIndexRoute,
}

const GuestLayoutRouteWithChildren = GuestLayoutRoute._addFileChildren(
  GuestLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof GuestLayoutRouteWithChildren
  '/about': typeof AboutRoute
  '/compare': typeof CompareRoute
  '/cars/$car-id': typeof CarsCarIdRoute
  '/': typeof GuestLayoutHomeIndexRoute
}

export interface FileRoutesByTo {
  '/about': typeof AboutRoute
  '/compare': typeof CompareRoute
  '/cars/$car-id': typeof CarsCarIdRoute
  '/': typeof GuestLayoutHomeIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_guest-layout': typeof GuestLayoutRouteWithChildren
  '/about': typeof AboutRoute
  '/compare': typeof CompareRoute
  '/cars/$car-id': typeof CarsCarIdRoute
  '/_guest-layout/_home/': typeof GuestLayoutHomeIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/about' | '/compare' | '/cars/$car-id' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/about' | '/compare' | '/cars/$car-id' | '/'
  id:
    | '__root__'
    | '/_guest-layout'
    | '/about'
    | '/compare'
    | '/cars/$car-id'
    | '/_guest-layout/_home/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  GuestLayoutRoute: typeof GuestLayoutRouteWithChildren
  AboutRoute: typeof AboutRoute
  CompareRoute: typeof CompareRoute
  CarsCarIdRoute: typeof CarsCarIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  GuestLayoutRoute: GuestLayoutRouteWithChildren,
  AboutRoute: AboutRoute,
  CompareRoute: CompareRoute,
  CarsCarIdRoute: CarsCarIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_guest-layout",
        "/about",
        "/compare",
        "/cars/$car-id"
      ]
    },
    "/_guest-layout": {
      "filePath": "_guest-layout.tsx",
      "children": [
        "/_guest-layout/_home/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/compare": {
      "filePath": "compare.tsx"
    },
    "/cars/$car-id": {
      "filePath": "cars.$car-id.tsx"
    },
    "/_guest-layout/_home/": {
      "filePath": "_guest-layout/_home.index.tsx",
      "parent": "/_guest-layout"
    }
  }
}
ROUTE_MANIFEST_END */
